<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>WebAutomation</groupId>
	<artifactId>WebAutomation_AllurePOM</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>WebAutomation-Glady</name>
	<description>This is a Selenium Hybrid Frameowrk that implements Allure Reporting Tool and TestNG</description>

	<!-- To Ask Maven complier to Use JDK 1.8 -->
	<properties>
		<compiler.version>1.8</compiler.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<selenium.version>3.0.1</selenium.version>
		<allure.version>1.5.0</allure.version>
		<aspectj.version>1.8.5</aspectj.version>
	</properties>

	<!-- All the Dependencies Added Here -->
	<dependencies>

		<!-- TestNG Dependency -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.9.10</version>
		</dependency>

		<!-- Selenium Webdriver Dependency -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
		</dependency>


		<!-- Selenium Webdriver-Firefox Dependency -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<version>${selenium.version}</version>
		</dependency>

		<!-- HTML Unit Headerless Browser Dependency -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>htmlunit-driver</artifactId>
			<version>2.23.1</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<version>${selenium.version}</version>
		</dependency>

		<!-- Monte-Video Recorder Dependancy -->
		<dependency>
			<groupId>com.pojosontheweb</groupId>
			<artifactId>monte-repack</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- YANDEX QATools Properties Dependancy -->
		<dependency>
			<groupId>ru.yandex.qatools.properties</groupId>
			<artifactId>properties-loader</artifactId>
			<version>1.5</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/ru.yandex.qatools.ashot/ashot -->
		<dependency>
			<groupId>ru.yandex.qatools.ashot</groupId>
			<artifactId>ashot</artifactId>
			<version>1.5.2</version>
		</dependency>

		<!-- Hamcrest Dependancy -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
		</dependency>

		<!-- Allure Java Annotations Dependancy -->
		<dependency>
			<groupId>ru.yandex.qatools.allure</groupId>
			<artifactId>allure-java-annotations</artifactId>
			<version>${allure.version}</version>
		</dependency>

		<!-- Allure Java Properties Dependancy -->
		<dependency>
			<groupId>ru.qatools.commons</groupId>
			<artifactId>properties</artifactId>
			<version>2.0.RC5</version>
		</dependency>

		<!-- Fluent Selenium Dependancy -->
		<dependency>
			<groupId>org.seleniumhq.selenium.fluent</groupId>
			<artifactId>fluent-selenium</artifactId>
			<version>1.16.1</version>
		</dependency>

		<!-- Allure TestNG Adapter -->
		<dependency>
			<groupId>ru.yandex.qatools.allure</groupId>
			<artifactId>allure-testng-adaptor</artifactId>
			<version>${allure.version}</version>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- HTML Elements from QA Tools to setup Page Object Model -->
		<dependency>
			<groupId>ru.yandex.qatools.htmlelements</groupId>
			<artifactId>htmlelements-java</artifactId>
			<version>1.17</version>
		</dependency>


	</dependencies>

	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<build>
				<plugins>

					<!-- This plugin signs all of the project's attached artifacts with 
						GnuPG -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
					</plugin>

					<!-- This Plugin is used to compile the sources of your project -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.6.1</version>
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
						</configuration>
					</plugin>

					<!-- This Plugin handles the copying of project resources to the output 
						directory -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.0.2</version>
					</plugin>

					<!-- This Plugin creates a jar archive of the source files of the current 
						project -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.0.1</version>
					</plugin>

					<!-- The Javadoc Plugin uses the Javadoc tool to generate javadocs for 
						the specified project -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.10.4</version>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<!-- Apache Maven SureFire Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<argLine>
						-javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
					</argLine>
					<properties>
						<property>
							<name>listener</name>
							<value>listeners.AllureListener</value>
						</property>
					</properties>
				</configuration>

				<!-- Aspect J Weaver Dependency -->
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjweaver</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- To Display the Environment Details in the Allure Report/Copy Enivroment.XML 
				File to allure-results Folder -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-allure-environment</id>
						<phase>pre-site</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/allure-results</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources</directory>
									<includes>
										<include>environment.properties</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--Needed only to show reports locally. Run jetty:run and open localhost:8080 
				to show the report -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.0.v20161208</version>
				<configuration>
					<webAppSourceDirectory>${project.build.directory}/site/allure-maven-plugin</webAppSourceDirectory>
					<stopKey>stop</stopKey>
					<stopPort>1234</stopPort>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- Allure Reporting Plugin -->
	<reporting>
		<excludeDefaults>true</excludeDefaults>
		<plugins>
			<plugin>
				<groupId>ru.yandex.qatools.allure</groupId>
				<artifactId>allure-maven-plugin</artifactId>
				<version>2.2</version>
				<!-- <configuration> <reportVersion>${allure.version}</reportVersion> 
					</configuration> -->
			</plugin>
		</plugins>
	</reporting>
</project>